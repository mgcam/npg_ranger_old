#
# This file matches the apache configuration is compatible with
#
# npg_ranger v0.5.0
#
# behind a reverse proxy that performs authentication
#

# Compilation configuration for Apache v. 2.4.23
# The modules we definitely want are explicitly enabled.
# The disabled modules will not be compiled.  LDAP-dependant modules do not compile on
# OpenStack VMs. Since we do not need them, we are excluding them.
# ./configure --prefix=XXX \
# --enable-authn_core \
# --enable-authz_host \
# --enable-authz_user \
# --enable-authz_core \
# --enable-headers \
# --enable-setenvif \
# --enable-rewrite \
# --enable-so \
# --enable-alias \
# --enable-dir \
# --enable-mime \
# --enable-log_config \
# --enable-env \
# --enable-ssl \
# --enable-proxy \
# --enable-proxy_html \
# --enable-xml2enc \
# --disable-userdir \
# --disable-info \
# --disable-status \
# --disable-include \
# --disable-ldap \
# --disable-authnz_ldap

#
# Customise these definitions
#
Define SR           "/usr/local/apache2"
Define RSOCKET_PATH "/tmp/npg_ranger.socket"
Define CUSTOM_PORT  9090
Define NPG_DOCKER   1

ServerName localhost

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
ServerRoot ${SR}

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen ${CUSTOM_PORT}

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#

LoadModule authn_core_module   modules/mod_authn_core.so
LoadModule authz_host_module   modules/mod_authz_host.so
LoadModule authz_user_module   modules/mod_authz_user.so
LoadModule authz_core_module   modules/mod_authz_core.so
LoadModule mime_module         modules/mod_mime.so
LoadModule log_config_module   modules/mod_log_config.so
LoadModule env_module          modules/mod_env.so
LoadModule setenvif_module     modules/mod_setenvif.so
LoadModule unixd_module        modules/mod_unixd.so
LoadModule dir_module          modules/mod_dir.so
LoadModule alias_module        modules/mod_alias.so

LoadModule proxy_module        modules/mod_proxy.so
LoadModule headers_module      modules/mod_headers.so
LoadModule rewrite_module      modules/mod_rewrite.so
LoadModule deflate_module      modules/mod_deflate.so
LoadModule proxy_http_module   modules/mod_proxy_http.so
#LoadModule proxy_html_module  modules/mod_proxy_html.so
#LoadModule xml2enc_module     modules/mod_xml2enc.so

#LoadModule auth_openidc_module modules/mod_auth_openidc.so

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

ServerAdmin webmaster@someplace.com
ServerSignature Off
ServerTokens ProductOnly

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "${SR}/htdocs"
<Directory "${SR}/htdocs">
    Options FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "logs/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog "logs/access_log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog "logs/access_log" combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to
    # exist in your server's namespace, but do not anymore. The client
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

</IfModule>

<IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it,
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
#EnableSendfile on

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be
# included to add extra features or to modify the default configuration of
# the server, or you may simply copy their contents here and change as
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

#
# Reverse proxy configuration
#

# We are running a reverse proxy only,
# do not allow forward proxy requests
ProxyRequests Off
# Pass the Host: line from the incoming request to the proxied host,
# instead of the hostname specified in the ProxyPass line
ProxyPreserveHost On
# We do not want to reverse proxy everything in dic root,
# only requests to ranger
<IfDefine !NPG_DOCKER>
    ProxyPass /npg_ranger/        unix:${RSOCKET_PATH}|http://localhost/
    ProxyPassReverse /npg_ranger/ unix:${RSOCKET_PATH}|http://localhost/
</IfDefine>
<IfDefine NPG_DOCKER>
    ProxyPass /npg_ranger/        http://ranger:5050/
    ProxyPassReverse /npg_ranger/ http://ranger:5050/
</IfDefine>


# Configure mod_proxy_html to understand HTML4/XHTML1
<IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
</IfModule>

RewriteEngine On

RewriteCond "%{HTTPS}" =off
RewriteRule ^\/npg_ranger\/.* - [E=XPROTOCOL:http]
RewriteCond "%{HTTPS}" =on
RewriteRule ^\/npg_ranger\/.* - [E=XPROTOCOL:https]
# Use ":" as suffix of protocol eg "http:"
RequestHeader set X-Forwarded-Proto  "%{XPROTOCOL}e:"

#
# Google OpenID Connect Configuration
#
#OIDCProviderMetadataURL "https://accounts.google.com/.well-known/openid-configuration"
#OIDCClientID            "XXXX"
#OIDCClientSecret        "XXXX"
#OIDCCryptoPassphrase    "XXXX"
#OIDCRedirectURI         "http://XXXX:${CUSTOM_PORT}/aouth2callback"
#
#OIDCScope "openid email"
# Set the REMOTE_USER env var to user's email rather that the sub claim
#OIDCRemoteUserClaim email
# Maximum duration of the application session
# When not defined the default is 8 hours (3600 * 8 seconds).
# When set to 0, the session duration will be set equal to the expiry time of the ID token.
# 15 is the lowest possible value. This makes the browser to notice that the user has
# logged out.
#OIDCSessionMaxDuration 300
#OIDCCookieHTTPOnly "On"
# Defines the action to be taken when an unauthenticated request is made.
# Ideally, we want 401, but there seem to be a bug there. So, with the
# 'auth' value the status of the response will be 302 - redirect to Google's login.
#OIDCUnAuthAction auth
# Interval in seconds after which the session will be invalidated
# when no interaction has occurred.
#OIDCSessionInactivityTimeout 300
# Specify the HTTP header variable name to set with the name of the authenticated user,
# i.e. copy what is set in REMOTE_USER and configured in OIDCRemoteUserClaim.
# When not defined no such header is added.
# This setting can be configured for both the "openid-connect" and "oauth20" AuthType on
# a server-wide or directory level.
#OIDCAuthNHeader X-Remote-User

#<Location / >
#    # Auth is not sent by the browser for OPTIONS requests
#    <Limit GET POST>
#        AuthType openid-connect
#        Require valid-user
#    </Limit>
#</Location>

User www-data
Group www-data
